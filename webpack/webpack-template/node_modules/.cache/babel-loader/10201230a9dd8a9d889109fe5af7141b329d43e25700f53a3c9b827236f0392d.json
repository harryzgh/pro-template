{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.promise.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n// import \"core-js\"\n// import \"core-js/es/promise\"\nimport { sum } from \"./js/sum\";\n// 引入 Css 资源，Webpack才会对其打包\nimport \"./css/index.css\";\nconsole.log(\"hello main\");\nconsole.log(sum(1, 2, 3, 4, 5));\nvar obj = {\n  useBuiltIns: \"usage\",\n  corejs: {\n    version: \"3\",\n    proposals: true\n  }\n};\nconsole.log(sum(1, 2, 3, 4));\nconsole.log('tes++++---9990(())(0ssss', obj);\nconsole.log('so da:', [1, 2, 3, 4].includes(1));\n\n// 添加promise代码\nvar promise = Promise.resolve();\npromise.then(function () {\n  console.log(\"hello promise\");\n});\ndocument.getElementById(\"btn\").onClick = function () {\n  // eslint会对动态导入语法报错，需要修改eslint配置文件\n  // webpackChunkName: \"math\"：这是webpack动态导入模块命名的方式\n  // \"math\"将来就会作为[name]的值显示。\n  import( /* webpackChunkName: \"math\" */\"./js/count.js\").then(function (_ref) {\n    var count = _ref.count;\n    console.log(count(2, 1));\n  });\n};","map":{"version":3,"names":["sum","console","log","obj","useBuiltIns","corejs","version","proposals","includes","promise","Promise","resolve","then","document","getElementById","onClick","_ref","count"],"sources":["/Users/zengguanghuo/Documents/technology/00-project/00-pro-demo/pro-template/webpack/webpack-template/src/main.js"],"sourcesContent":["// import \"core-js\"\n// import \"core-js/es/promise\"\nimport { sum } from \"./js/sum\"\n// 引入 Css 资源，Webpack才会对其打包\nimport \"./css/index.css\"\nconsole.log(\"hello main\")\nconsole.log(sum(1, 2, 3, 4, 5))\n\nconst obj =  {\n    useBuiltIns: \"usage\", \n    corejs: { version: \"3\", proposals: true } \n}\nconsole.log(sum(1, 2, 3, 4))\nconsole.log('tes++++---9990(())(0ssss', obj)\nconsole.log('so da:', [1, 2, 3, 4].includes(1))\n\n// 添加promise代码\nconst promise = Promise.resolve()\npromise.then(() => {\n  console.log(\"hello promise\")\n})\n\n\ndocument.getElementById(\"btn\").onClick = function () {\n    // eslint会对动态导入语法报错，需要修改eslint配置文件\n    // webpackChunkName: \"math\"：这是webpack动态导入模块命名的方式\n    // \"math\"将来就会作为[name]的值显示。\n    import(/* webpackChunkName: \"math\" */ \"./js/count.js\").then(({ count }) => {\n        console.log(count(2, 1))\n    })\n}"],"mappings":";;;;;;AAAA;AACA;AACA,SAASA,GAAG,QAAQ,UAAU;AAC9B;AACA,OAAO,iBAAiB;AACxBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;AACzBD,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAE/B,IAAMG,GAAG,GAAI;EACTC,WAAW,EAAE,OAAO;EACpBC,MAAM,EAAE;IAAEC,OAAO,EAAE,GAAG;IAAEC,SAAS,EAAE;EAAK;AAC5C,CAAC;AACDN,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,GAAG,CAAC;AAC5CF,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;;AAE/C;AACA,IAAMC,OAAO,GAAGC,OAAO,CAACC,OAAO,CAAC,CAAC;AACjCF,OAAO,CAACG,IAAI,CAAC,YAAM;EACjBX,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;AAC9B,CAAC,CAAC;AAGFW,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,OAAO,GAAG,YAAY;EACjD;EACA;EACA;EACA,MAAM,EAAC,8BAA+B,eAAe,CAAC,CAACH,IAAI,CAAC,UAAAI,IAAA,EAAe;IAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAChEhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}